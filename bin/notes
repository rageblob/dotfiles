#!/bin/bash

# This script does:
# - list Notes in $HOME/Notes
# - edit (in neovim), archive or delete the selected file

select_file() {
  local FILE=$(cd "$1" && find . -maxdepth 1 -type f ! -name "TODO-*" | sed 's/^\.\///g' | fzf --preview="bat --style plain {}")
  echo $FILE
}

get_user_response_character() {
  # Change terminal settings to capture single keypress
  stty -echo -icanon
  local CHOICE=$(dd bs=1 count=1 2>/dev/null)
  stty echo icanon
  echo $CHOICE
}

# BEGIN
NOTES_FOLDER="$HOME/Notes"
FILE=$(select_file "$NOTES_FOLDER")
FILEPATH="$NOTES_FOLDER/$FILE"
ARCHIVE="$NOTES_FOLDER/Archive"

if [[ -f "$FILEPATH" ]]; then
  echo "File: ${FILE}"
  echo "  Press Enter to edit, a/A to archive, d/D to delete: (a/A/d/D)"
  RESPONSE=$(get_user_response_character)

  if [[ "$RESPONSE" =~ ^[Dd]$ ]]; then
    echo "Are you sure you want to delete '$FILE'? THIS CAN NOT BE UNDONE: (y/Y) "
    CONFIRM=$(get_user_response_character)
    if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
      rm "$FILEPATH"
      echo "File '$FILEPATH' deleted."
    fi
  elif [[ "$RESPONSE" =~ ^[Aa]$ ]]; then
    echo "Archive '$FILE'? (y/N): "
    CONFIRM=$(get_user_response_character)
    if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
      mv "$FILEPATH" $ARCHIVE
      echo "Moved '$FILE' to $ARCHIVE"
    fi
  # Check for Escape (ASCII 27)
  elif [[ "$RESPONSE" == $'\e' ]]; then
    echo "Operation cancelled."
    exit 1
  else
    nvim "$FILEPATH"
  fi
fi
